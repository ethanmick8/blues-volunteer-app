{"ast":null,"code":"var _jsxFileName = \"/Users/ethanmick/Documents/cs4320/volunteer-project/blues-volunteer-app/client/src/components/ProtectedRoute.js\";\n// SWITCH AND REDIRECT USAGE (WASN'T WORKING)\n/* import React from 'react';\nimport { Route, Redirect } from 'react-router';\n\nconst ProtectedRoute = ({ component: Component, isAuthenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute; */\n\n// ProtectedRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  let {\n    element: Component,\n    isAuthenticated,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 43\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","_ref","element","Component","isAuthenticated","rest","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/ethanmick/Documents/cs4320/volunteer-project/blues-volunteer-app/client/src/components/ProtectedRoute.js"],"sourcesContent":["// SWITCH AND REDIRECT USAGE (WASN'T WORKING)\n/* import React from 'react';\nimport { Route, Redirect } from 'react-router';\n\nconst ProtectedRoute = ({ component: Component, isAuthenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute; */\n\n// ProtectedRoute.js\nimport React from 'react';\nimport { Route, Navigate } from 'react-router';\n\nconst ProtectedRoute = ({ element: Component, isAuthenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      element={\n        isAuthenticated ? <Component /> : <Navigate to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGC,IAAA,IAAsD;EAAA,IAArD;IAAEC,OAAO,EAAEC,SAAS;IAAEC,eAAe;IAAE,GAAGC;EAAK,CAAC,GAAAJ,IAAA;EACtE,oBACEF,OAAA,CAACH,KAAK;IAAA,GACAS,IAAI;IACRH,OAAO,EACLE,eAAe,gBAAGL,OAAA,CAACI,SAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAAGV,OAAA,CAACF,QAAQ;MAACa,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACxD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEN,CAAC;AAACE,EAAA,GATIX,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}