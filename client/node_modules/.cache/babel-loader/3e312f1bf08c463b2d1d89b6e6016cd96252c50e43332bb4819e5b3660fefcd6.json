{"ast":null,"code":"var _jsxFileName = \"/Users/ethanmick/Documents/cs4320/volunteer-project/blues-volunteer-app/client/src/components/ProtectedRoute.js\";\n// SWITCH AND REDIRECT USAGE (WASN'T WORKING)\n/* import React from 'react';\nimport { Route, Redirect } from 'react-router';\n\nconst ProtectedRoute = ({ component: Component, isAuthenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute; */\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = _ref => {\n  let {\n    component: Component,\n    isAuthenticated,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      return isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 61\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","ProtectedRoute","_ref","component","Component","isAuthenticated","rest","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/ethanmick/Documents/cs4320/volunteer-project/blues-volunteer-app/client/src/components/ProtectedRoute.js"],"sourcesContent":["// SWITCH AND REDIRECT USAGE (WASN'T WORKING)\n/* import React from 'react';\nimport { Route, Redirect } from 'react-router';\n\nconst ProtectedRoute = ({ component: Component, isAuthenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute; */\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router';\n\nconst ProtectedRoute = ({ component: Component, isAuthenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGC,IAAA,IAAwD;EAAA,IAAvD;IAAEC,SAAS,EAAEC,SAAS;IAAEC,eAAe;IAAE,GAAGC;EAAK,CAAC,GAAAJ,IAAA;EACxE,oBACEF,OAAA,CAACH,KAAK;IAAA,GACAS,IAAI;IACRC,MAAM,EAAGC,KAAK,IAAK;MACjB,OAAOH,eAAe,gBAAGL,OAAA,CAACI,SAAS;QAAA,GAAKI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,gBAAGZ,OAAA,CAACF,QAAQ;QAACe,EAAE,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAC9E;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEN,CAAC;AAACE,EAAA,GATIb,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}